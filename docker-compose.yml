version: "3.8"

services:
  # Postgres Databases
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: travel_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - mynetwork

  trip_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: trip_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - trip_db_data:/var/lib/postgresql/data
    networks:
      - mynetwork
  
  booking_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: book_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - booking_db_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  # PgAdmin for managing PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - mynetwork

  # Redis (if required)
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  # Backend Services
  user-service:
    image: user-service-image
    build: ./backend/user_service
    networks:
      - mynetwork
    ports:
      - "8000:8000"
    volumes:
      - ./backend/user_service:/app
    environment:
      - DB_HOST=postgres
      - DB_NAME=travel_db
      - DB_USER=user
      - DB_PASSWORD=password
    depends_on:
      - postgres
      - redis
  
  booking-service:
    image: booking-service-image
    build: ./backend/booking_service
    networks:
      - mynetwork
    ports:
      - "8003:8003"
    volumes:
      - ./backend/booking_service:/app
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5434/booking_db
      - DEBUG=true
    depends_on:
      - postgres
      - redis

  admin-service:
    image: admin-service-image
    build: ./backend/admin_service
    networks:
      - mynetwork
    ports:
      - "8001:8001"
    volumes:
      - ./backend/admin_service:/app
    environment:
      - DATABASE_URL_TRAVEL=postgres://user:password@postgres:5432/travel_db
      - DATABASE_URL_TRIP=postgres://user:password@postgres:5432/trip_db
      - DEBUG=true
    depends_on:
      - postgres
      - redis

  trip-service:
    image: trip-service-image
    build: ./backend/trip_service
    networks:
      - mynetwork
    ports:
      - "8002:8002"
    volumes:
      - ./backend/trip_service:/app
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/trip_db
      - DEBUG=true
    depends_on:
      - postgres
      - redis

  # Nginx Service for routing requests
  nginx:
    image: nginx:latest
    container_name: travelhelper-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/admin_service/media:/app/admin_service/media
      - ./backend/trip_service/media:/app/trip_service/media
    depends_on:
      - admin-service
      - user-service
      - trip-service
    networks:
      - mynetwork

  # Frontend Service (if required)
  # frontend:
  #   build: ./frontend
  #   restart: always
  #   volumes:
  #     - ./frontend:/app
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - user-service

  # admin:
  #   build: ./admin
  #   restart: always
  #   ports:
  #     - "3001:3000"
  #   depends_on:
  #     - admin-service

volumes:
  postgres_data:
  trip_db_data:
  redis_data:
  booking_db_data:

networks:
  mynetwork:
    driver: bridge
